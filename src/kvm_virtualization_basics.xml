<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:its="http://www.w3.org/2005/11/its"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.2"
         xml:id="cha-kvm-intro">
   <title>Introduction to KVM virtualization</title>
   <info/>
   <sect1 xml:id="sec-kvm-intro">
      <title>Basic components</title>
      <para>KVM is a full virtualization solution for hardware architectures that support hardware virtualization (refer to <xref linkend="sec-architecture-support"/> for more details on supported architectures).</para>
      <para>VM Guests (virtual machines), virtual storage and virtual networks can be managed with QEMU tools directly or with the <systemitem class="library">libvirt</systemitem>-based stack. The QEMU tools include <command>qemu-system-ARCH</command>, the QEMU monitor, <command>qemu-img</command>, and <command>qemu-ndb</command>. A <systemitem class="library">libvirt</systemitem>-based stack includes <systemitem class="library">libvirt</systemitem> itself, along with <systemitem class="library">libvirt</systemitem>-based applications such as <command>virsh</command>, <command>virt-manager</command>, <command>virt-install</command>, and <command>virt-viewer</command>.</para>
   </sect1>
   <sect1 xml:id="sec-kvm-intro-arch">
      <title>KVM virtualization architecture</title>
      <para>This full virtualization solution consists of two main components:</para>
      <itemizedlist>
         <listitem>
            <para>A set of kernel modules (<systemitem>kvm.ko</systemitem>, <systemitem>kvm-intel.ko</systemitem>, and <systemitem>kvm-amd.ko</systemitem>) that provides the core virtualization infrastructure and processor-specific drivers.</para>
         </listitem>
         <listitem>
            <para>A user space program (<systemitem class="resource">qemu-system-ARCH</systemitem>) that provides emulation for virtual devices and control mechanisms to manage VM Guests (virtual machines).</para>
         </listitem>
      </itemizedlist>
      <para>The term KVM more properly refers to the kernel level virtualization functionality, but is in practice more commonly used to refer to the user space component.</para>
      <figure xml:id="fig-kvm-basics-arch">
         <title>KVM virtualization architecture</title>
         <mediaobject>
            <imageobject outputformat="print">
               <imagedata fileref="media/kvm_qemu.png" width="100%"/>
            </imageobject>
            <imageobject outputformat="screen">
               <imagedata fileref="media/kvm_qemu.png" width="100%"/>
            </imageobject>
         </mediaobject>
      </figure>
      <!-- QEMU CAN DO A LOT OF THINGS, WE DO NOT RECOMMEND
      TO EXPOSE THIS FEATURE IN THE OFFICIAL DOC AS WE DONT SUPPORT
      THEM
      <note>
      <title>Hyper-V emulation support</title>
      <para>
      QEMU can provide certain Hyper-V hypercalls for Windows* guests
      to partly emulate a Hyper-V environment. This can be used to achieve
      better behavior for Windows* guests that are Hyper-V enabled.
      </para>
      </note>
      -->
   </sect1>
</chapter>
