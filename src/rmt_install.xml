<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:its="http://www.w3.org/2005/11/its"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.2"
         xml:id="cha-rmt-installation"><!-- ==================================================================== -->
   <info>
      <title>RMT installation and configuration</title>
   </info>
   <para>RMT is included in SUSE Linux Enterprise Server starting with version 15. Install RMT directly during the installation of <phrase role="productname">SUSE Linux Enterprise Server</phrase> or install it on a running system. After the packages are installed, use YaST to do an initial configuration.</para>
   <warning>
      <title>RMT server conflicts with installation server</title>
      <para>Configuring a server to be an RMT server installs and configures the NGINX Web server, listening on port 80.</para>
      <para>However, configuring a machine to be an installation server automatically installs the Apache Web server and configures it to listen on port 80.</para>
      <para>Do not try to enable both these functions on the same server. It is not possible for a single server to host both simultaneously.</para>
   </warning>
   <sect1 xml:id="sec-rmt-storage-requirements">
      <title>Storage requirements</title>
      <para>Downloaded packages are stored in <filename>/usr/share/rmt/public/repo</filename>, which is a symbolic link to <filename>/var/lib/rmt/public/repo/</filename>.</para>
      <para>The amount of storage your RMT server requires depends on several variables: the number of repositories and architectures that you mirror, and the number of products that are enabled. As a general guide, 1.5 times the total size of all enabled repositories should be sufficient. This is about 200 GB per SUSE Linux Enterprise release, including all extensions.</para>
   </sect1>
   <sect1 xml:id="sec-rmt-installation-yast">
      <title>Installation during system installation</title>
      <para>To install it during installation, select the <package>rmt-server</package> package. Package selection can be found in <emphasis>Installation Settings</emphasis> when selecting <emphasis>Software</emphasis>.</para>
      <figure>
         <title>RMT pattern</title>
         <mediaobject>
            <imageobject outputformat="print">
               <imagedata fileref="media/rmt_installation.png" width="70%"/>
            </imageobject>
            <imageobject outputformat="screen">
               <imagedata fileref="media/rmt_installation.png" width="70%"/>
            </imageobject>
         </mediaobject>
      </figure>
      <para>Check for available RMT updates immediately after installing SUSE Linux Enterprise Server using the <command>zypper patch</command> command because SUSE continuously releases maintenance updates for RMT.</para>
   </sect1>
   <sect1 xml:id="sec-rmt-installation-zypper">
      <title>Installation on an existing system</title>
      <para>To install RMT on a running <phrase role="productname">SUSE Linux Enterprise Server</phrase> installation, use <command>zypper</command>:</para>
      <screen><prompt>&gt;</prompt><command>sudo</command><command>zypper in rmt-server</command></screen>
      <sect2 xml:id="sec-rmt-installation-zypper-jeos">
         <title>Installation on SLES Minimal VM</title>
         <para>SLES Minimal VM is a minimal customizable operating system that is designed for specific usage scenarios, for example, to be run as:</para>
         <itemizedlist>
            <listitem>
               <para>A container host</para>
            </listitem>
            <listitem>
               <para>A virtual machine guest</para>
            </listitem>
            <listitem>
               <para>An appliance base system</para>
            </listitem>
            <listitem>
               <para>A small server image</para>
            </listitem>
         </itemizedlist>
         <para>SLES Minimal VM image is a good choice for being used as an RMT server. You can download SLES Minimal VM images for KVM, Xen, Microsoft Hyper-V, VMware, and OpenStack from the public SUSE Linux Enterprise Server download page at <link xlink:href="https://www.suse.com/download/sles/"/>. Find more information on SLES Minimal VM at <link xlink:href="https://documentation.suse.com/smart/virtualization-cloud/html/minimal-vm/index.html"/>.</para>
         <para>Installing RMT on SLES Minimal VM is the same as installing it on an existing system (see <xref linkend="sec-rmt-installation-zypper"/>). To install RMT on SLES Minimal VM, run the following command from the SLES Minimal VM command line as <systemitem class="username">root</systemitem>:</para>
         <screen><prompt role="root">#</prompt>zypper install rmt-server yast2-rmt nginx mariadb</screen>
         <important>
            <title>Hardware requirements</title>
            <para>When installing RMT on SLES Minimal VM, be aware that it requires a minimum of 100 GB disk space, depending on the products you select to mirror. Another requirement is a CPU with at least two cores and 2 GB of RAM.</para>
         </important>
      </sect2>
   </sect1>
   <sect1 xml:id="sec-rmt-deploy-kubernetes">
      <title>Deploying RMT on top of the Kubernetes cluster</title>
      <para>This section describes how to deploy RMT on top of the Kubernetes cluster. It uses <emphasis>Helm</emphasis> as the package manager to interact with the Kubernetes cluster. Find more details about using Helm at <link xlink:href="https://helm.sh/docs/intro/using_helm/"/>.</para>
      <sect2 xml:id="sec-rmt-deploy-kubernetes-prerequisites">
         <title>Prerequisites</title>
         <itemizedlist>
            <listitem>
               <para>Running Kubernetes cluster</para>
            </listitem>
            <listitem>
               <para><command>helm</command> command configured to interact with the cluster</para>
            </listitem>
         </itemizedlist>
      </sect2>
      <sect2 xml:id="sec-rmt-deploy-kubernetes-components">
         <title>Application components</title>
         <para>Each component of the RMT application is deployed in its own container. RMT consists of the following components:</para>
         <variablelist>
            <varlistentry>
               <term>RMT server</term>
               <listitem>
                  <para>Containerized version of the RMT application server with the ability to pass its configuration via Helm values. Storage is done on a volume that is allocated to the Kubernetes cluster. You need to adjust the size of the storage depending on the number of repositories you need to mirror.</para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term>MariaDB</term>
               <listitem>
                  <para>The database back-end for RMT. No post-installation task is needed since RMT creates the required database and tables at start-up. If passwords are not specified in the <filename>values.yaml</filename> file, they are generated automatically.</para>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term>Nginx</term>
               <listitem>
                  <para>A Web server configured for RMT routes. Having a properly configured Web server allows you to target your Ingress traffic (for RMT) to this Nginx service directly. You do not need to configure Ingress for RMT specific paths handling, as Nginx is configured to take care of this itself.</para>
               </listitem>
            </varlistentry>
         </variablelist>
      </sect2>
      <sect2 xml:id="sec-rmt-deploy-kubernetes-values">
         <title>The <filename>values.yaml</filename> file</title>
         <para>The RMT chart includes the <filename>values.yaml</filename> file where all parameters are documented and their default values are defined. You can override these values by providing your own values file, for example:</para>
         <screen><prompt>&gt;</prompt>cat &lt;&lt; EOF &gt; rmt-config.yaml
---
app:
  storage:
    class: local-path<co xml:id="co-kubernetes-values-appstorage"/>
  scc:
    enabled: false
    username: "UXXXXXXX"
    password: "PASSXXXX"
    products_enable:
      - SLES/15.3/x86_64
      - sle-module-python2/15.3/x86_64
    products_disable:
      - sle-module-legacy/15.3/x86_64
      - sle-module-cap-tools/15.3/x86_64
db:
  storage:
    class: local-path<co xml:id="co-kubernetes-values-dbstorage"/>
ingress:
  enabled: true
  hosts:
    - host: chart-example.local
      paths:
        - path: "/"
          pathType: Prefix
  tls:
    - secretName: rmt-cert
      hosts:
        - chart-example.local
EOF
</screen>
         <calloutlist>
            <callout arearefs="co-kubernetes-values-appstorage co-kubernetes-values-dbstorage">
               <para>The <literal>local-path</literal> storage class is only available in Rancher workloads. To make the helm chart succeed, you need to install the <literal>local-path</literal> storage provisioner by running the following command:</para>
               <screen><prompt>&gt;</prompt>kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.26/deploy/local-path-storage.yaml</screen>
            </callout>
         </calloutlist>
         <para>And to install RMT, run:</para>
         <screen><prompt>&gt;</prompt>helm install rmtsle oci://registry.suse.com/suse/rmt-helm -f rmt-config.yaml</screen>
         <sect3 xml:id="sec-rmt-helm-required-values">
            <title>Required values</title>
            <variablelist>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: app.scc.password</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: string</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>nil</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: <link xlink:href="https://scc.suse.com/">SUSE Customer Center</link> proxy password. The password string needs to be put inside quotes. If the quote character <literal>"</literal> is part of the string, it has to be escaped with <literal>\</literal>.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: app.scc.username</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: string</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>nil</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: <link xlink:href="https://scc.suse.com/">SUSE Customer Center</link> proxy user name. The user name string needs to be put inside quotes. If the quote character <literal>"</literal> is part of the string, it has to be escaped with <literal>\</literal>.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: app.scc.products_enable</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: list</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>[]</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: list of products to enable for mirroring</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: app.scc.products_disable</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: list</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>[]</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: list of products to disable for mirroring</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: app.storage.class</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: string</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>""</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: Kubernetes <literal>storageclass</literal>.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: db.storage.class</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: string</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>""</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: Kubernetes <literal>storageclass</literal>.</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: ingress.enabled</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: bool</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>false</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: Ingress Enabled</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: ingress.hosts[0]</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: object</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>{"host":"chart-example.local","paths":[{"path":"/","pathType":"Prefix"}]}</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: DNS name at which the RMT service will be accessible from clients</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: ingress.tls[0].hosts[0]</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: string</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>"chart-example.local"</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: DNS name at which the RMT service will be accessible from clients</para>
                  </listitem>
               </varlistentry>
               <varlistentry>
                  <term>
                     <emphasis role="strong">Key</emphasis>: ingress.tls[0].secretName</term>
                  <listitem>
                     <para><emphasis role="strong">Type</emphasis>: string</para>
                     <para><emphasis role="strong">Default</emphasis>: <literal>"rmt-cert"</literal></para>
                     <para><emphasis role="strong">Description</emphasis>: TLS Ingress Certificate</para>
                  </listitem>
               </varlistentry>
            </variablelist>
         </sect3>
      </sect2>
   </sect1>
   <sect1 xml:id="sec-rmt-installation-yast-configuration">
      <title>RMT configuration with YaST</title>
      <para>Configure RMT with YaST as described in the following procedure. It is assumed that this procedure is executed on a newly installed system.</para>
      <procedure>
         <step>
            <para>Start YaST with the <literal>rmt</literal> module.</para>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>yast2 rmt</command></screen>
            <para>Alternatively, start YaST and select <menuchoice><guimenu>Network Services</guimenu><guimenu>RMT Configuration</guimenu></menuchoice>.</para>
         </step>
         <step>
            <para>Enter your organization credentials. To retrieve your credentials, refer to <xref linkend="sec-rmt-mirroring-credentials"/>.</para>
         </step>
         <step>
            <para>Enter credentials for a new MariaDB user and database name, and confirm with <guimenu>Next</guimenu>.</para>
            <para>If a password for the MariaDB <literal>root</literal> user is already set, you are required to enter it. If no password is set for <literal>root</literal>, you are asked to enter a new one.</para>
         </step>
         <step>
            <para>Enter a common name for the SSL certificates. The common name should be the <emphasis>fully qualified domain name</emphasis> (<emphasis>FQDN</emphasis>) of the server. Enter all domain names and IP addresses with which you want to reach the RMT server as alternative common names.</para>
            <para>When all common names are entered, select <guimenu>Next</guimenu>.</para>
            <tip>
               <title>Certificate locations for RMT</title>
               <itemizedlist>
                  <listitem>
                     <para><filename>/etc/rmt/ssl/rmt-ca.crt</filename></para>
                     <para>This is the CA certificate bundle that <command>yast2 rmt</command> uses to certify the RMT server certificate. <command>yast2 rmt</command> only creates this file if it does not already exist.</para>
                  </listitem>
                  <listitem>
                     <para><filename>/etc/rmt/ssl/rmt-server.crt</filename> and <filename>/etc/rmt/ssl/rmt-server.key</filename></para>
                     <para><command>yast2 rmt</command> only generates a new server certificate and private key if one does not already exist. To regenerate this certificate, refer to <xref linkend="cha-manage-certificates-https"/>.</para>
                  </listitem>
               </itemizedlist>
            </tip>
         </step>
         <step>
            <para>If <systemitem class="daemon">firewalld</systemitem> is enabled on this system, enable the check box to open the required ports.</para>
            <figure>
               <title>Enabling ports in <systemitem class="daemon">firewalld</systemitem>
               </title>
               <mediaobject>
                  <imageobject outputformat="print">
                     <imagedata fileref="media/rmt_firewalld.png" width="60%"/>
                  </imageobject>
                  <imageobject outputformat="screen">
                     <imagedata fileref="media/rmt_firewalld.png" width="65%"/>
                  </imageobject>
               </mediaobject>
            </figure>
            <para>If <systemitem class="daemon">firewalld</systemitem> is not enabled now and you plan to enable it later, you can always open relevant ports by running the <command>yast2 rmt</command> module.</para>
            <tip>
               <title>Fine-tuning <systemitem class="daemon">firewalld</systemitem> settings</title>
               <para>By clicking <guimenu>Firewall Details</guimenu>, you can open the relevant ports for specific network interfaces only.</para>
            </tip>
            <para>Continue with <guimenu>Next</guimenu>.</para>
         </step>
         <step>
            <para>To view the summary, click <guimenu>Next</guimenu>. Close YaST by clicking <guimenu>Finish</guimenu>. YaST then enables and starts all <systemitem class="daemon">systemd</systemitem> services and timers.</para>
         </step>
      </procedure>
   </sect1>
   <sect1>
      <title>Enabling SLP announcements</title>
      <para>RMT includes the SLP service description file <filename>/etc/slp.reg.d/rmt-server.reg</filename>. To enable SLP announcements of the RMT service, follow these steps:</para>
      <procedure>
         <step>
            <para>If <systemitem class="daemon">firewalld</systemitem> is running, open relevant ports and reload the <systemitem class="daemon">firewalld</systemitem> configuration:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> firewall-cmd --permanent --add-port=427/tcp
success
<prompt>&gt;</prompt><command>sudo</command> firewall-cmd --permanent --add-port=427/udp
success
<prompt>&gt;</prompt><command>sudo</command> firewall-cmd --reload
</screen>
         </step>
         <step>
            <para>Verify that the SLP server is installed and install it if it is not:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> zypper install openslp-server</screen>
         </step>
         <step>
            <para>Enable and start the SLP service:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> systemctl enable slpd.service
<prompt>&gt;</prompt><command>sudo</command> systemctl restart slpd.service
</screen>
         </step>
      </procedure>
   </sect1>
   <sect1 xml:id="rmt-self-update-firewall">
      <title>Accessing SUSE Customer Center behind a firewall</title>
      <para>If the RMT server is behind a firewall and cannot access SUSE Customer Center directly, you need to allow connections to the following domains for both 80 and 443 ports on the firewall.</para>
      <itemizedlist>
         <listitem>
            <para>scc.suse.com</para>
         </listitem>
         <listitem>
            <para>updates.suse.com</para>
         </listitem>
         <listitem>
            <para>installer-updates.suse.com</para>
         </listitem>
      </itemizedlist>
      <para>If the firewall you are using does not support host name allowlisting—such as <systemitem class="daemon">firewalld</systemitem>—you need to allow connections to the corresponding IP addresses as described in the following steps.</para>
      <procedure>
         <step>
            <para>Resolve the IP address of the domain, for example, <literal>installer-updates.suse.com</literal>.</para>
            <screen><prompt>&gt;</prompt><command>nslookup installer-updates.suse.com</command>
[...]
Address: 152.199.22.115</screen>
         </step>
         <step>
            <para>Add firewall rules for ports 80 and 443 for each discovered IP address.</para>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>firewall-cmd --permanent --zone=public \ --add-rich-rule='rule family="ipv4" source address="152.199.22.115" \ port protocol="tcp" port="80" accept'</command></screen>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>firewall-cmd --permanent --zone=public \ --add-rich-rule='rule family="ipv4" source address="152.199.22.115" \ port protocol="tcp" port="443" accept'</command></screen>
         </step>
         <step>
            <para>Reload the firewall configuration.</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> firewall-cmd --reload</screen>
         </step>
      </procedure>
   </sect1>
</chapter>
