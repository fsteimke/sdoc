<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:its="http://www.w3.org/2005/11/its"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.2"
         xml:id="cha-rmt-mirroring"><!-- ==================================================================== -->
   <title>Mirroring repositories on the RMT server</title>
   <info/>
   <para>You can mirror the installation and update repositories on the RMT server. This way, you do not need to download updates on each machine, which saves time and capacity.</para>
   <para>In its default configuration, RMT mirrors enabled product repositories automatically once every night.</para>
   <para>By default, the mirrored repositories are stored in <filename>/var/lib/rmt/public/repo</filename>.</para>
   <note>
      <title>Change the default location of the mirrored repositories</title>
      <para>To change the default location of the mirrored repositories, point the <filename>/usr/share/rmt/public/repo</filename> symbolic link to the desired directory. This can be done using the command:</para>
      <para>
         <command>ln -sfn <replaceable>TARGET</replaceable> /usr/share/rmt/public/repo</command>
      </para>
      <para>(Replace <literal>TARGET</literal> with the desired destination). Make sure that the target has read and write permissions for the <literal>rmt</literal> user and <literal>nginx</literal> group.</para>
   </note>
   <para>When enabled repositories are fully mirrored, you can register your client systems against RMT by running <command>SUSEConnect --url https://<replaceable>RMT_HOSTNAME</replaceable>
      </command> on the client machine. After successful registration, the repositories from the RMT server are used by Zypper on the client machine.</para>
   <important>
      <title>SUSE Linux Enterprise Server 11 clients</title>
      <para>RMT does not support clients with SUSE Linux Enterprise Server versions 11 and older.</para>
   </important>
   <sect1 xml:id="sec-rmt-mirroring-credentials">
      <title>Mirroring credentials</title>
      <para>You need organization credentials to create a local mirror of the SUSE Linux Enterprise repositories. You can obtain the credentials from SUSE Customer Center.</para>
      <para>To get the credentials from SUSE Customer Center, follow these steps:</para>
      <procedure>
         <step>
            <para>Visit SUSE Customer Center at <link xlink:href="https://scc.suse.com"/> and log in.</para>
         </step>
         <step>
            <para>If you are a member of multiple organizations, select the organization you want to work with from the sidebar on the left.</para>
         </step>
         <step>
            <para>Select <guimenu>Proxies</guimenu> in the top menu.</para>
         </step>
         <step>
            <para>The credentials are displayed in the top right corner.</para>
         </step>
         <step>
            <para>To see the password, click the <inlinemediaobject>
                  <imageobject outputformat="print">
                     <imagedata fileref="media/scc_eye_icon.png" width="3mm"/>
                  </imageobject>
                  <imageobject outputformat="screen">
                     <imagedata fileref="media/scc_eye_icon.png" width="4mm"/>
                  </imageobject>
               </inlinemediaobject> icon.</para>
         </step>
      </procedure>
      <para>The obtained credentials should be set with the YaST RMT Server Configuration module or added directly to the <filename>/etc/rmt.conf</filename> file. For more information about the <filename>/etc/rmt.conf</filename> file, see <xref linkend="sec-rmt-config-rmtconf"/>.</para>
   </sect1>
   <sect1 xml:id="sec-rmt-mirroring-synchronization">
      <title>Synchronizing repository metadata</title>
      <para>The local RMT database needs to be updated periodically with the information downloaded from SUSE Customer Center. This includes information about available products and repositories.</para>
      <para>The synchronization is activated by the <systemitem class="daemon">systemd</systemitem> timer <literal>rmt-server-sync.timer</literal>. To view its status, for example, the next running time, use <command>systemctl status</command>.</para>
      <screen><prompt>&gt;</prompt><command>sudo</command><command>systemctl status rmt-server-sync.timer</command>
● rmt-server-sync.timer - RMT Sync timer
   Loaded: loaded (/usr/lib/systemd/system/rmt-server-sync.timer; enabled; vendor preset: disabled)
   Active: active (waiting) since Fri 2018-06-22 04:22:34 EDT; 2h 34min ago
  Trigger: Sat 2018-06-23 03:53:00 EDT; 20h left

Jun 22 04:22:34 d31 systemd[1]: Started RMT Sync timer.</screen>
      <para>If the timer is not enabled or started, start it manually.</para>
      <screen><prompt>&gt;</prompt><command>sudo</command><command>systemctl enable --now rmt-server-sync.timer</command></screen>
      <para>To update the RMT database manually, use the <command>rmt-cli sync</command> command. For details, see <xref linkend="sec-rmt-tools-rmt-cli-sync"/>.</para>
   </sect1>
   <sect1 xml:id="sec-rmt-mirroring-mirroring">
      <title>Mirroring packages</title>
      <para>Packages for enabled repositories are mirrored on your RMT server. Packages are downloaded periodically once a day. But the download can also be triggered manually at any time.</para>
      <para>The periodic mirroring is activated by the <systemitem class="daemon">systemd</systemitem> timer <literal>rmt-server-mirror.timer</literal>. To show its status, for example, the next running time, use <command>systemctl status</command>.</para>
      <screen><prompt role="root">#</prompt><command>systemctl status rmt-server-mirror.timer</command>
● rmt-server-mirror.timer - RMT Mirror timer
   Loaded: loaded (/usr/lib/systemd/system/rmt-server-mirror.timer; enabled; vendor preset: disabled)
   Active: active (waiting) since Fri 2018-06-22 04:22:34 EDT; 2h 34min ago
  Trigger: Sat 2018-06-23 02:17:57 EDT; 19h left

Jun 22 04:22:34 d31 systemd[1]: Started RMT Mirror timer.</screen>
      <para>If the timer is not enabled or started, start it manually.</para>
      <screen><prompt>&gt;</prompt><command>sudo</command><command>systemctl enable --now rmt-server-mirror.timer</command></screen>
      <para>To update the mirrored packages manually, use the <command>rmt-cli mirror</command> command. For details, see <xref linkend="sec-rmt-tools-rmt-cli-mirror"/>.</para>
   </sect1>
   <sect1 xml:id="sec-rmt-mirroring-enable-disable">
      <title>Enabling and disabling mirroring of repositories</title>
      <para>You can enable or disable the mirroring of repositories individually or by product. You can specify one or more repositories or products at once. When repositories are enabled, their packages are downloaded and updated during the mirroring process. To enable or disable mirroring of repositories, you either need the product string or ID, or the repository name or ID. Enabling or disabling a product is desired, because this automatically enables or disables all repositories associated with the product.</para>
      <sect2 xml:id="sec-rmt-mirroring-enable-disable-product">
         <title>Using products</title>
         <para>To enable or disable all repositories of a product, use the <command>rmt-cli products enable <replaceable>ID</replaceable>
            </command> and <command>rmt-cli products disable <replaceable>ID</replaceable>
            </command> commands. To retrieve an ID for an enabled product, use the <command>rmt-cli products list</command> command. To get the ID of a disabled product that is still available, run the <command>rmt-cli products list --all</command> command.</para>
         <para>Example:</para>
         <screen><prompt>&gt;</prompt><command>sudo</command><command>rmt-cli products list --all</command>
+------+----------------------+---------+--------+--------------+---------------
| ID   | Product              | Version | Arch   | Mirror?      | Last mirrored
+------+----------------------+---------+--------+--------------+---------------
[...]
| 1743 | SUSE Package Hub     | 15      | x86_64 | Don't Mirror |
|      | PackageHub/15/x86_64 |         |        |              |
[...]

<prompt>&gt;</prompt><command>sudo</command><command>rmt-cli products enable 1743</command>
Found product by target 1743: SUSE Package Hub 15 x86_64.
Enabling SUSE Package Hub 15 x86_64:
  SUSE Package Hub 15 x86_64:
    Enabled repository SLE-Module-Packagehub-Subpackages15-Pool.
    Enabled repository SLE-Module-Packagehub-Subpackages15-Updates.
    Enabled repository SUSE-PackageHub-15-Pool.
    Enabled repository SUSE-PackageHub-15-Standard-Pool..

<prompt>&gt;</prompt><command>sudo</command><command>rmt-cli products disable 1743</command>
Found product by target 1743: SUSE Package Hub 15 x86_64.
Disabling SUSE Package Hub 15 x86_64:
  SUSE Package Hub 15 x86_64:
    Disabled repository SLE-Module-Packagehub-Subpackages15-Pool.
    Disabled repository SLE-Module-Packagehub-Subpackages15-Updates.
    Disabled repository SUSE-PackageHub-15-Pool.
    Disabled repository SUSE-PackageHub-15-Standard-Pool.

 To clean up downloaded files, run 'rmt-cli repos clean'</screen>
         <tip>
            <title>Enabling and disabling multiple products at once</title>
            <para>To enable or disable multiple products at once, specify a space-delimited list of their IDs or product strings, for example:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>rmt-cli products enable 1743 SLES/15/x86_64 SLES/12</command>
Found product by target 1743: SUSE Package Hub 15 x86_64.
Enabling SUSE Package Hub 15 x86_64:
  SUSE Package Hub 15 x86_64:
    Enabled repository SLE-Module-Packagehub-Subpackages15-Pool.
    Enabled repository SLE-Module-Packagehub-Subpackages15-Updates.
    Enabled repository SUSE-PackageHub-15-Pool.
    Enabled repository SUSE-PackageHub-15-Standard-Pool.
Found product by target SLES/15/x86_64: SUSE Linux Enterprise Server 15 x86_64.
Enabling SUSE Linux Enterprise Server 15 x86_64:
  SUSE Linux Enterprise Server 15 x86_64:
    Enabled repository SLE-Product-SLES15-Pool.
    Enabled repository SLE-Product-SLES15-Updates.
    Enabled repository SLE15-Installer-Updates.
  Basesystem Module 15 x86_64:
    Enabled repository SLE-Module-Basesystem15-Pool.
    Enabled repository SLE-Module-Basesystem15-Updates.
  Server Applications Module 15 x86_64:
    Enabled repository SLE-Module-Server-Applications15-Pool.
    Enabled repository SLE-Module-Server-Applications15-Updates.
Found product by target SLES/12: SUSE Linux Enterprise Server 12 x86_64.
Enabling SUSE Linux Enterprise Server 12 x86_64:
  SUSE Linux Enterprise Server 12 x86_64:
    Enabled repository SLES12-Pool.
    Enabled repository SLES12-Updates.</screen>
         </tip>
      </sect2>
      <sect2 xml:id="sec-rmt-mirroring-enable-disable-repository">
         <title>Using repositories</title>
         <para>To enable or disable mirroring of specific repositories, use the <command>rmt-cli repos enable <replaceable>ID</replaceable>
            </command> and <command>rmt-cli repos disable <replaceable>ID</replaceable>
            </command> commands. To retrieve an ID for an enabled repository, use the <command>rmt-cli repos list</command>command. If you need to get the ID of a disabled but accessible repository, execute the command <command>rmt-cli repos list --all</command>.</para>
         <para>Example:</para>
         <screen><prompt>&gt;</prompt><command>sudo</command><command>rmt-cli repos list --all</command>
+--------+-------------------------+-------------------------------------------+
| ID     | Name                    | Description                               |
+--------+-------------------------+-------------------------------------------+
[...]
| 3061   | SUSE-PackageHub-15-Pool | SUSE-PackageHub-15-Pool for sle-15-x86_64 |
[...]
+--------+-------------------------+-------------------------------------------+

<prompt>&gt;</prompt><command>sudo</command><command>rmt-cli repos enable 3061</command>
Repository by ID 3061 successfully enabled.

<prompt>&gt;</prompt><command>sudo</command><command>rmt-cli repos disable 3061</command>
Repository by ID 3061 successfully disabled.

To clean up downloaded files, please run 'rmt-cli repos clean'
</screen>
         <tip>
            <title>Enabling and disabling multiple repositories at once</title>
            <para>To enable or disable multiple repositories at once, specify a space-delimited list of their IDs, for example:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>rmt-cli repos enable 2526 3263</command>
Repository by ID 2526 successfully enabled.
Repository by ID 3263 successfully enabled.

<prompt>&gt;</prompt><command>sudo</command><command>rmt-cli repos disable 2526 3263</command>
Repository by ID 2526 successfully disabled.
Repository by ID 3263 successfully disabled.

To clean up downloaded files, run 'rmt-cli repos clean'
</screen>
         </tip>
      </sect2>
   </sect1>
   <sect1 xml:id="sec-rmt-mirroring-delete">
      <title>Deleting mirrored data</title>
      <para>After you disable the mirroring of a repository or product as described in <xref linkend="sec-rmt-mirroring-enable-disable"/>, the mirrored data remains on your local hard disk. This includes the mirrored RPM packages.</para>
      <para>To delete disabled repository data, use the command <command>rmt-cli repos clean</command>. With this command, RMT verifies that only enabled repositories are mirrored and provides a way to delete invalid data.</para>
      <para>Before removing any data, the command lists the affected repositories and requires the user to input <literal>yes</literal> to continue.</para>
      <screen><prompt>&gt;</prompt><command>sudo</command><command>rmt-cli repos clean</command>
RMT found locally mirrored files from the following repositories which are not marked to be mirrored:

SLE-Product-SLES15-Updates for sle-15-x86_64
SLE-Product-SLES15-Pool for sle-15-x86_64
SLE15-Installer-Updates for sle-15-x86_64

Would you like to continue and remove the locally mirrored files of these repositories?
Only 'yes' will be accepted.

Enter a value:  yes

Deleted locally mirrored files from repository 'SLE-Product-SLES15-Updates for sle-15-x86_64'.
Deleted locally mirrored files from repository 'SLE-Product-SLES15-Pool for sle-15-x86_64'.
Deleted locally mirrored files from repository 'SLE15-Installer-Updates for sle-15-x86_64'.

Clean finished. An estimated 157 MB were removed.
   </screen>
      <tip>
         <title>Manually remove repository data</title>
         <para>To delete disabled repository data, manually remove its corresponding directory:</para>
         <screen><prompt>&gt;</prompt><command>sudo</command><command>rm -r /usr/share/rmt/public/repo/SUSE/Products/<replaceable>PRODUCT</replaceable>/<replaceable>VERSION</replaceable>/<replaceable>ARCHITECTURE</replaceable>/</command></screen>
      </tip>
   </sect1>
   <sect1 xml:id="sec-rmt-mirroring-custom-repository">
      <title>Adding custom repositories</title>
      <para>You can mirror custom repositories with the RMT server. These repositories are not provided by SUSE Customer Center. Repositories can be provided by, for example, the Open Build Service, third-party vendors, or created with <command>createrepo</command>.</para>
      <para>Custom repositories can either be stand-alone, or you can attach them to products. This allows you to connect multiple repositories with one command on a client registered to the RMT server.</para>
      <para>The following example procedure illustrates the mirroring of a third-party repository.</para>
      <procedure>
         <step>
            <para>Add the remote repository to the RMT server. Replace <replaceable>URL</replaceable> with the URL to the repository. Replace <replaceable>NAME</replaceable> with a name of your choice for the repository.</para>
            <screen><prompt role="root">#</prompt><command>rmt-cli repos custom add <replaceable>URL</replaceable><replaceable>NAME</replaceable></command></screen>
         </step>
         <step>
            <para>List all custom repositories to get the ID of the new repository.</para>
            <screen><prompt role="root">#</prompt><command>rmt-cli repos custom list</command></screen>
         </step>
         <step>
            <para>Optionally attach the new custom repository to a product. For example, if the new custom repository is required by all desktop clients, it can be attached to the <literal>SUSE Linux Enterprise Desktop</literal> product.</para>
            <screen><prompt role="root">#</prompt><command>rmt-cli repos custom attach <replaceable>REPOSITORY_ID</replaceable><replaceable>PRODUCT_ID</replaceable></command></screen>
            <para>Replace <replaceable>REPOSITORY_ID</replaceable> with the ID of the new custom repository. Replace <replaceable>PRODUCT_ID</replaceable> with the ID of a product you want the repository to be attached to. If you need to retrieve the <replaceable>PRODUCT_ID</replaceable>, use the command <command>rmt-cli products list --all</command>.</para>
            <important>
               <para>When custom repositories are associated with a product, clients registering with that product see it as disabled. To enable the repository, find its ID with the command <command>zypper lr</command> and run:</para>
               <screen><prompt role="root">#</prompt>zypper mr -e <replaceable>REPO_ID</replaceable></screen>
            </important>
         </step>
         <step>
            <para>Enable mirroring of the new custom repository.</para>
            <screen><prompt role="root">#</prompt><command>rmt-cli repos custom enable <replaceable>REPOSITORY_ID</replaceable></command></screen>
         </step>
      </procedure>
      <para>To get a list of all available custom repositories commands, see <xref linkend="sec-rmt-tools-rmt-cli-repos"/>.</para>
   </sect1>
   <sect1 xml:id="sec-rmt-mirroring-export-import">
      <title>Exporting and importing repositories</title>
      <para>RMT has built-in functions to import and export data about available repositories and the mirrored packages. For example, this can be used to speed up the setup of a new RMT server by locally copying already mirrored RPM packages.</para>
      <para>Another use case is the <emphasis>offline mode</emphasis>. It allows the transfer of data to a disconnected RMT server, for example, to provide updates to computers in an air-gapped network.</para>
      <para>The following procedure describes the transfer of data and mirrored RPMs between two RMT servers with a USB drive. The server <literal>sun</literal> is connected to SUSE Customer Center, while <literal>sirius</literal> is a server in an air-gapped network.</para>
      <procedure>
         <step>
            <para>Log in on the server <literal>sun</literal>.</para>
            <screen><prompt role="root">root@sun #</prompt><command>rmt-cli sync</command><prompt role="root">root@sun #</prompt><command>rmt-cli mirror</command></screen>
         </step>
         <step>
            <para>Connect a USB drive, assumed to be <filename>/dev/sdb</filename> and mount it, for example, in <filename>/mnt/external</filename>.</para>
            <screen><prompt role="root">root@sun #</prompt><command>mount /dev/sdb1 /mnt/external</command></screen>
         </step>
         <step>
            <substeps>
               <step>
                  <para>Export the data about available repositories and products.</para>
                  <screen><prompt role="root">root@sun #</prompt><command>rmt-cli export data /mnt/external/</command></screen>
               </step>
               <step>
                  <para>Export the list of enabled repositories. The exported file is required for exporting the repositories in the next step.</para>
                  <screen><prompt role="root">root@sun #</prompt><command>rmt-cli export settings /mnt/external/</command></screen>
               </step>
               <step>
                  <para>Export mirrored RPM packages. Depending on the size of mirrored repositories, this can take a long time.</para>
                  <screen><prompt role="root">root@sun #</prompt><command>rmt-cli export repos /mnt/external/</command></screen>
               </step>
            </substeps>
         </step>
         <step>
            <para>Unmount and unplug the disk from <literal>sun</literal> and go to <literal>sirius</literal>.</para>
            <screen><prompt role="root">root@sun #</prompt><command>umount /mnt/external</command></screen>
         </step>
         <step>
            <para>If not yet done, set up RMT on <literal>sirius</literal> by running the <command>yast2 rmt</command>. In case of an offline RMT setup, select <guimenu>Skip</guimenu> on the <guimenu>Organization Credentials</guimenu> screen.</para>
         </step>
         <step>
            <para>Connect the USB drive to <literal>sirius</literal> and mount it in <filename>/mnt/external</filename>.</para>
            <screen><prompt role="root">root@sirius #</prompt><command>mount /dev/sdb1 /mnt/external</command></screen>
         </step>
         <step>
            <substeps>
               <step>
                  <para>Import the metadata about available repositories and products.</para>
                  <screen><prompt role="root">root@sirius #</prompt><command>rmt-cli import data /mnt/external/</command></screen>
               </step>
               <step>
                  <para>Import mirrored RPM packages. Depending on the size of mirrored repositories, this can take a long time.</para>
                  <screen><prompt role="root">root@sirius #</prompt><command>rmt-cli import repos /mnt/external/</command></screen>
               </step>
            </substeps>
         </step>
         <step>
            <para>Enable repositories as required on the <literal>sirius</literal>. For details, see <xref linkend="sec-rmt-mirroring-enable-disable"/>.</para>
         </step>
      </procedure>
      <note>
         <title>Exporting enabled settings from air-gapped server</title>
         <para>If your air-gapped server (<literal>sirius</literal>) has many enabled repositories, or if the enabled repositories change frequently, we recommend exporting the repository settings from this server.</para>
         <para>The server connected to SUSE Customer Center (<literal>sun</literal>) can then import the exported settings. This ensures that <literal>sun</literal> downloads all data required by <literal>sirius</literal>.</para>
      </note>
   </sect1>
</chapter>
