<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:its="http://www.w3.org/2005/11/its"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.2"
         xml:id="cha-update-preparation">
   <title>Preparing the upgrade</title>
   <info>
      <abstract>
         <para>Before starting the upgrade procedure, make sure your system is properly prepared. Among other things, preparation involves backing up data and checking the release notes. The following chapter guides you through these steps.</para>
      </abstract>
   </info>
   <remark>jufa 2021-02-09: suggestion to give this chapter a facelift: Chapter 3: Preparing the upgrade - Intro - Procedure w check system version, release notes, back-up, listing packages, create proposal</remark>
   <sect1 xml:id="sec-update-preparation-update">
      <title>Make sure the system is up-to-date</title>
      <para>
         <remark>jufa 2021-02-09: add what to do if the system is older? check what is meant with patch level. check if update path is supported, link to sec-upgrade-path-supported</remark> Upgrading the system is only supported from the most recent patch level. Make sure the latest system updates are installed by either running <command>zypper patch</command> or by starting the YaST module <guimenu>Online-Update</guimenu>.</para>
      <note xml:id="new-4096-bit-rpm-key">
         <title>New 4096-bit signing key for SUSE Linux Enterprise 15</title>
         <para>Mid 2023, the SUSE Linux Enterprise 15 product family switched over from a RSA 2048-bit signing key to a new RSA 4096-bit key. This change covers RPM packages, package repositories and ISO signatures. Old repositories that are not updated anymore and RPMs released up to the switch-over date, will remain signed with the old 2048-bit key.</para>
         <para>If you update your system, the new key is automatically imported into the RPM keyring from the <package>suse-build-key</package> package on SLE 15 SP 4 and SP5 as well as the LTSS versions of SLE 15 SP1, SP2 and SP3.</para>
         <para>If the key has not been imported yet, you can manually import it with:</para>
         <screen><prompt>&gt;</prompt><command>sudo</command><command>rpm --import /usr/lib/rpm/gnupg/keys/gpg-pubkey-3fa1d6ce-63c9481c.asc</command></screen>
         <para>If you are running an older version of SLE or did not import the new key, you will be asked to trust it during the upgrade. Make sure the fingerprint matches:</para>
         <screen>pub   rsa4096/0xF74F09BC3FA1D6CE 2023-01-19 [SC] [expires: 2027-01-18]
Key fingerprint = 7F00 9157 B127 B994 D5CF  BE76 F74F 09BC 3FA1 D6CE
uid           SUSE Package Signing Key &lt;build@suse.de&gt;</screen>
         <para>Additionally, a reserve 4096-bit RSA key for disaster recovery purposes was imported:</para>
         <screen>pub   rsa4096/0xA1BFC02BD588DC46 2023-01-19 [SC] [expires: 2033-01-16]
Key fingerprint = B56E 5601 41D8 F654 2DFF  3BF9 A1BF C02B D588 DC46
uid           SUSE Package Signing Key (reserve key) &lt;build@suse.de&gt;</screen>
         <para>This key can be manually imported using:</para>
         <screen><prompt>&gt;</prompt><command>sudo</command><command>rpm --import /usr/lib/rpm/gnupg/keys/gpg-pubkey-d588dc46-63c939db.asc</command></screen>
         <para>Both keys can also be found on the installation media and the SUSE website at <link xlink:href="https://www.suse.com/support/security/keys/"/>.</para>
      </note>
   </sect1>
   <sect1 xml:id="sec-update-preparation-relnotes">
      <title>Read the release notes</title>
      <para>Find a list of all changes, new features, and known issues in the <link xlink:href="https://www.suse.com/releasenotes/">release notes</link>. You can also find the release notes on the installation media in the <filename>docu</filename> directory.</para>
      <para>The release notes usually only contain the changes between two subsequent releases. If you are skipping one or more Service Packs, check the release notes of the skipped Service Packs as well.</para>
      <para>Consult the release notes to check whether the following applies:</para>
      <itemizedlist>
         <listitem>
            <para>Your hardware needs special considerations</para>
         </listitem>
         <listitem>
            <para>Any currently used software packages have changed significantly</para>
         </listitem>
         <listitem>
            <para>Your installation requires special precautions</para>
         </listitem>
      </itemizedlist>
   </sect1>
   <sect1 xml:id="sec-update-preparation-backup">
      <title>Make a backup</title>
      <para>Before upgrading, back up your data by copying the existing configuration files to a separate medium (such as tape device, removable hard disk, etc.). This primarily applies to files stored in <filename>/etc</filename> and some directories and files in <filename>/var</filename> and <filename>/opt</filename>. You may also want to write the user data in <filename>/home</filename> (the <envar>HOME</envar> directories) to a backup medium.</para>
      <para>Back up all data as <systemitem class="username">root</systemitem>. Only <systemitem class="username">root</systemitem> has sufficient permissions for all local files.</para>
      <para>
         <remark>jufa 2021-02-09: check if backup function still exists and how it works. rework para accordingly: alternative for data back up</remark> If you have selected <guimenu>Update an Existing System</guimenu> as the installation mode in YaST, you can choose to do a (system) backup at a later point in time. You can choose to include all modified files and files from the <filename>/etc/sysconfig</filename> directory. However, this is not a complete backup, as all the other important directories mentioned above are missing. Find the backup in the <filename>/var/adm/backup</filename> directory.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-disk">
      <title>Check the available disk space</title>
      <para>Software tends to grow from version to version. Therefore, take a look at the available partition space before updating. If you suspect you are running short of disk space, back up your data before increasing the available space by resizing partitions, for example. There is no general rule regarding how much space each partition should have. Space requirements depend on your particular partitioning profile and the software selected.</para>
      <note>
         <title>Automatic check for enough space in YaST</title>
         <para>During the update procedure, YaST will check how much free disk space is available and display a warning to the user if the installation may exceed the available amount. In that case, performing the update may lead to an <emphasis>unusable system</emphasis>! Only if you know exactly what you are doing (by testing beforehand), you can skip the warning and continue the update.</para>
      </note>
      <sect2 xml:id="sec-update-preparation-disk-space">
         <title>Checking disk space on non-Btrfs file systems</title>
         <para>Use the <command>df</command> command to list available disk space. For example, in <xref linkend="ex-update-df"/>, the root partition is <filename>/dev/sda3</filename> (mounted as <filename>/</filename>).</para>
         <example xml:id="ex-update-df">
            <title>List with <command>df -h</command>
            </title>
            <screen>Filesystem     Size  Used Avail Use% Mounted on
     /dev/sda3       74G   22G   53G  29% /
     tmpfs          506M     0  506M   0% /dev/shm
     /dev/sda5      116G  5.8G  111G   5% /home
     /dev/sda1       44G    4G   40G   9% /data</screen>
         </example>
      </sect2>
      <sect2 xml:id="sec-update-preparation-disk-btrfs-on-root">
         <title>Checking disk space on Btrfs root file systems</title>
         <!--
    taroth 2019-05-06: the following two paras are copied from
    storage_filesystem.xml, sec.filesystems.major.btrfs.suse.space,
    TODO - for next release, consider moving the content of the above Storage
    Guide section to a phrases entity and re-using it here, as the pointer to
    the Storage Guide only works for SLES, not for SLED
   -->
         <para>On a Btrfs file system, the output of <command>df</command> can be misleading, because in addition to the space the raw data allocates, a Btrfs file system also allocates and uses space for metadata.</para>
         <para>Consequently a Btrfs file system may report being out of space even though it seems that plenty of space is still available. In that case, all space allocated for the metadata is used up. For details on how to check for used and available space on a Btrfs file system, see <phrase xmlns:l="http://docbook.org/ns/docbook/l10n" role="document-xref">Book <quote>Storage Administration Guide</quote>, </phrase>
            <xref linkend="sec-filesystems-major-btrfs-suse-space"
                  xrefstyle="%label &#34;%c&#34;"/>. For more information refer to <command>man 8 btrfs-filesystem</command> and <link xlink:href="https://btrfs.wiki.kernel.org/index.php/FAQ"/>.</para>
         <!-- lproven: It would be good to profile the next para for SLE Micro, as Btrfs is not
    optional there -->
         <para>When using Btrfs for root file systems on your machine, make sure there is enough free space. Check the available space on all mounted partitions. In the worst case, an upgrade needs as much disk space as the current root file system (without <filename>/.snapshot</filename>) for a new snapshot.</para>
         <para>The following recommendations have been proven:</para>
         <itemizedlist>
            <listitem>
               <para>For all file systems, including Btrfs, you need enough free disk space to download and install big RPMs. The space of old RPMs is only freed after new RPMs are installed.</para>
            </listitem>
            <listitem>
               <para>For Btrfs with snapshots, you need as a minimum as much free space as your current installation takes. We recommend having twice as much free space as the current installation.</para>
               <para>If you do not have enough free space, you can try to delete old snapshots with <command>snapper</command>:</para>
               <screen><prompt role="root">#</prompt><command>snapper</command> list
      <prompt role="root">#</prompt><command>snapper</command> delete NUMBER</screen>
               <para>However, this may not help in all cases. Before migration, most snapshots occupy only little space.</para>
            </listitem>
         </itemizedlist>
      </sect2>
   </sect1>
   <sect1 xml:id="sec-update-preparation-packagelist">
      <title>Listing installed packages and repositories</title>
      <para>
         <remark>jufa 2021-02-08: explain importance and purposeof this list. Clarify if requirement or suggestion? Used for reverting changes or to set-up new system?</remark> You can save a list of installed packages; for example, when doing a fresh install of a new major SLE release or reverting to the old version.</para>
      <note>
         <para>
            <remark>jufa: check if manual editing is still relevant 2021-02-09</remark> Be aware that not all installed packages or used repositories are available in newer releases of SUSE Linux Enterprise. Some may have been renamed and others replaced. It is also possible that some packages are still available for legacy purposes while another package is used by default. Therefore, some manual editing of the files might be necessary. This can be done with any text editor.</para>
      </note>
      <procedure>
         <step>
            <para>Create a file named <filename>repositories.bak.repo</filename> containing a list of all used repositories:</para>
            <screen><prompt role="root">#</prompt><command>zypper</command> lr -e repositories.bak</screen>
         </step>
         <step>
            <para>Also create a file named <filename>installed-software.bak</filename> containing a list of all installed packages:</para>
            <screen><prompt role="root">#</prompt><command>rpm</command> -qa --queryformat '%{NAME}\n' &gt; installed-software.bak</screen>
         </step>
         <step>
            <para>Back up both files. The repositories and installed packages can be restored with the following commands:</para>
            <screen><prompt role="root">#</prompt><command>zypper</command> ar repositories.bak.repo
<prompt role="root">#</prompt><command>zypper</command> install $(cat installed-software.bak)
</screen>
            <note xml:id="note-update-prep-backup-package-amount">
               <title>Number of packages increases with an update to a new major release</title>
               <para>A system upgraded to a new major version (SLE <replaceable>X+1</replaceable>) may contain more packages than the initial system (SLE <replaceable>X</replaceable>). It will also contain more packages than a fresh installation of SLE <replaceable>X+1</replaceable> with the same pattern selection. Reasons for this are:</para>
               <itemizedlist>
                  <listitem>
                     <para>Packages were split to allow a more fine-grained package selection. For example, 37 <package>texlive</package> packages on SLE 11 were split into over 3000 packages on SLE 15.</para>
                  </listitem>
                  <listitem>
                     <para>When a package has been split, all new packages are installed in the upgrade case to retain the same functionality as the previous version. However, the new default for a fresh installation of SLE <replaceable>X+1</replaceable> may be to not install all packages.</para>
                  </listitem>
                  <listitem>
                     <para>Legacy packages from SLE <replaceable>X</replaceable> may be kept for compatibility reasons.</para>
                  </listitem>
                  <listitem>
                     <para>Package dependencies and the scope of patterns may have changed.</para>
                  </listitem>
               </itemizedlist>
            </note>
         </step>
      </procedure>
   </sect1>
   <sect1 xml:id="sec-update-preparation-ltss">
      <title>Disable the LTSS extension</title>
      <para>If you upgrade a <phrase role="productname">SUSE Linux Enterprise Server</phrase> system with Long Term Service Pack Support (LTSS) to a version that is still under general support, the upgrade will fail with the error <literal>No migration available</literal>. This happens because <command>zypper migration</command> tries to migrate <emphasis>all</emphasis> repositories, but there is no LTSS repository for the new version yet.</para>
      <para>To fix this issue, disable the LTSS extension before the upgrade.</para>
      <procedure>
         <step>
            <para>Check if the LTSS extension is enabled:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> SUSEConnect --list-extensions | grep LTSS
SUSE Linux Enterprise Server LTSS 12 SP4 x86_64 (Installed)
Deactivate with: SUSEConnect -d -p SLES-LTSS/12.4/x86_64</screen>
         </step>
         <step>
            <para>Disable the LTSS extension with the command from the <command>SUSEConnect</command> output above:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> SUSEConnect -d -p SLES-LTSS/12.4/x86_64
Deregistered SUSE Linux Enterprise Server LTSS 12 SP4 x86_64
To server: https://scc.suse.com/</screen>
         </step>
         <step>
            <para>Verify the LTSS repository is no longer present with <command>zypper lr</command>.</para>
         </step>
      </procedure>
   </sect1>
   <sect1 xml:id="sec-update-preparation-postgresql">
      <title>Migrate your PostgreSQL database</title>
      <para><!-- jsc#PED-11635: PostgreSQL 17 is available in 15 SP7 and higher. -->
         <phrase role="productname">SUSE Linux Enterprise Server</phrase>
         <phrase role="productnumber">15 SP7</phrase> ships with the PostgreSQL database versions 15, 16 and 17. <!-- FIXME cwickert 2022-05-05: v17 is default in SLE 15 SP7, make sure
    this gets updated if we change the default in a later version or SP. --> While version 17 is the default, versions 15 and 16 are still provided through the <literal>Legacy</literal> module for upgrades from earlier versions of <phrase role="productname">SUSE Linux Enterprise Server</phrase>. Additional versions are available through SUSE Package Hub.</para>
      <para>Because of the required migration work of the database, there is no automatic upgrade process. As such, the switch from one version to another needs to be performed manually.</para>
      <para>The migration process is conducted by the <command>pg_upgrade</command> command, which is an alternative method of the classic dump and reload. In comparison with the <quote>dump and reload</quote> method, <command>pg_upgrade</command> makes the migration less time-consuming.</para>
      <para>The program files for each PostgreSQL version are stored in different, version-dependent directories. For example, in <filename>/usr/lib/postgresql96/</filename> for version 9.6, in <filename>/usr/lib/postgresql10/</filename> for version 10, and in <filename>/usr/lib/postgres17/</filename> for version 17. Note that the versioning policy of PostgreSQL has changed between the major versions 9.6 and 10. For details, see <link xlink:href="https://www.postgresql.org/support/versioning/"/>.</para>
      <para>The procedure below describes the database migration from version 16 to 17. When using a different version as start or target, replace the version numbers accordingly.</para>
      <para>To perform the database migration, do the following:</para>
      <procedure>
         <step>
            <para>Make sure the following preconditions are fulfilled:</para>
            <itemizedlist>
               <listitem>
                  <para>If not already done, upgrade any package of the old PostgreSQL version to the latest release through a maintenance update.</para>
               </listitem>
               <listitem>
                  <para>Create a backup of your existing database.</para>
               </listitem>
               <listitem>
                  <para>Install the packages for the new PostgreSQL major version. For SLE 15 SP7, this means installing <package>postgresql17-server</package> and all the packages it depends on.</para>
               </listitem>
               <listitem>
                  <para>Install the package <package>postgresql17-contrib</package>, which contains the command <command>pg_upgrade</command>:</para>
                  <screen><prompt role="root">#</prompt><command>zypper in postgresql17-contrib</command></screen>
               </listitem>
               <listitem>
                  <para>Make sure you have enough free space in your PostgreSQL data volume, which is <filename>/var/lib/pgsql/data</filename> by default. If space is tight, try to reduce size with the following SQL command on each database (can take a long time!):</para>
                  <screen><command>VACUUM FULL</command>;</screen>
               </listitem>
            </itemizedlist>
         </step>
         <step>
            <para>Stop the PostgreSQL server:</para>
            <screen><prompt role="root">#</prompt><command>systemctl</command> stop postgresql.service</screen>
         </step>
         <step>
            <para>Rename your old data directory:</para>
            <screen><prompt role="root">#</prompt><command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
         </step>
         <step>
            <para>Initialize your new database instance either manually with <command>initdb</command> or by starting and stopping PostgreSQL, which does it automatically:</para>
            <screen><prompt role="root">#</prompt><command>systemctl</command> start postgresql.service
<prompt role="root">#</prompt><command>systemctl</command> stop postgresql.service</screen>
         </step>
         <step>
            <para>If you have changed your configuration files in the old version, consider transferring these changes to the new configuration files. This may affect the files <filename>postgresql.auto.conf</filename>, <filename>postgresql.conf</filename>,<filename>pg_hba.conf</filename> and <filename>pg_ident.conf</filename>. The old versions of these files are located in <filename>/var/lib/pgsql/data.old/</filename>, and the new versions can be found in <filename>/var/lib/pgsql/data</filename>.</para>
            <para>Note that copying the old configuration files is not recommended, because this may overwrite new options, new defaults and changed comments.</para>
         </step>
         <step>
            <para>Start the migration process as user <systemitem class="username">postgres</systemitem>:</para>
            <screen><prompt role="root">#</prompt>su - postgres
postgres &gt; <command>pg_upgrade</command> \
 --old-datadir "/var/lib/pgsql/data.old" \
 --new-datadir "/var/lib/pgsql/data" \
 --old-bindir "/usr/lib/postgresql16/bin/" \
 --new-bindir "/usr/lib/postgresql17/bin/"
postgres &gt; <command>exit</command></screen>
         </step>
         <step>
            <para>Start your new PostgreSQL 17 database instance:</para>
            <screen><prompt role="root">#</prompt><command>systemctl</command> start postgresql.service</screen>
         </step>
         <step>
            <para>Check if the migration was successful. The scope of the test depends on your use case, and there is no general tool to automate this step.</para>
         </step>
         <step>
            <para>Remove any old PostgreSQL 16 packages and your old data directory:</para>
            <screen><prompt role="root">#</prompt><command>zypper</command> search -s postgresql16| xargs zypper rm -u
<prompt role="root">#</prompt><command>rm</command> -rf /var/lib/pgsql/data.old</screen>
         </step>
      </procedure>
      <para>For more information about upgrading databases or using alternative methods such as logical replication, refer to the official PostgreSQL documentation at <link xlink:href="https://www.postgresql.org/docs/17/upgrading.html"/>.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-mariadb">
      <title>Migrate your MySQL or MariaDB database</title>
      <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
      <para>As of SUSE Linux Enterprise 12, SUSE switched from MySQL to MariaDB. Before you start any upgrade, it is highly recommended to back up your database.</para>
      <para>To perform the database migration, do the following:</para>
      <procedure>
         <step>
            <para>Create a dump file:</para>
            <remark>cwickert 2022-07-07: '--add-drop-database' is required for <link xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=1166786">BSC#1166786</link>.</remark>
            <screen><prompt role="root">#</prompt><command>mysqldump</command> -u root -p --all-databases --add-drop-database &gt; mysql_backup.sql</screen>
            <para>By default, <command>mysqldump</command> does not dump the <literal>INFORMATION_SCHEMA</literal> or <literal>performance_schema</literal> database. For more details refer to <link xlink:href="https://mariadb.com/kb/en/mariadb-dumpmysqldump/"/>.</para>
         </step>
         <step>
            <para>Store your dump file, the configuration file <filename>/etc/my.cnf</filename>, and the directory <filename>/etc/mysql/</filename> for later investigation (<emphasis>not</emphasis> installation!) in a safe place.</para>
         </step>
         <step>
            <para>Perform the <phrase role="productname">SUSE Linux Enterprise Server</phrase> upgrade. After the upgrade, your former configuration file <filename>/etc/my.cnf</filename> will still be intact. You can find the new configuration in the file <filename>/etc/my.cnf.rpmnew</filename>.</para>
         </step>
         <step>
            <para>Configure your MariaDB database to your needs. Do <emphasis>not</emphasis> use the former configuration file and directory, but use it as a reminder and adapt it.</para>
         </step>
         <step>
            <para>Make sure you start the MariaDB server:</para>
            <screen><prompt role="root">#</prompt><command>systemctl</command> start mariadb</screen>
            <para>If you want to start the MariaDB server on every boot, enable the service:</para>
            <screen><prompt role="root">#</prompt><command>systemctl</command> enable mariadb</screen>
         </step>
         <step>
            <para>Verify that MariaDB is running properly by connecting to the database:</para>
            <screen><prompt role="root">#</prompt><command>mariadb</command> -u root -p</screen>
         </step>
      </procedure>
   </sect1>
   <sect1 xml:id="sec-update-preparation-ssl">
      <title>Create non-MD5 server certificates for Java applications</title>
      <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
      <remark>jufa 2021-02-09: FIXME check if still relevant, check which versions are affected</remark>
      <remark>cwickert-2022-07-07: Change occurred during the upgrade from java-1_8_0-openjdk-1.8.0.65-1.13 to java-1_8_0-openjdk-1.8.0.72-3.2, means for SLES it happened between SLES 12 GA and SP1. So still relevant.</remark>
      <para>As a security measure, MD5-based certificates are no longer supported in Java. If you have certificates created as MD5, re-create your certificates with the following steps:</para>
      <procedure>
         <step>
            <para>Open a terminal and log in as <systemitem class="username">root</systemitem>.</para>
         </step>
         <step>
            <para>Create a private key:</para>
            <screen><prompt role="root">#</prompt><command>openssl</command> genrsa -out server.key 1024</screen>
            <para>If you want a stronger key, replace <literal>1024</literal> with a higher number, for example, <literal>4096</literal>.</para>
         </step>
         <step>
            <para>Create a certificate signing request (CSR):</para>
            <screen><prompt role="root">#</prompt><command>openssl</command> req -new -key server.key -out server.csr</screen>
         </step>
         <step>
            <para>Self-sign the certificate:</para>
            <screen><prompt role="root">#</prompt><command>openssl</command> x509 -req -days 365 -in <!--
    -->server.csr -signkey server.key -out server.crt</screen>
         </step>
         <step>
            <para>Create the PEM file:</para>
            <screen><prompt role="root">#</prompt><command>cat</command> server.key server.crt &gt; server.pem</screen>
         </step>
         <step>
            <para>Place the files <filename>server.crt</filename>, <filename>server.csr</filename>, <filename>server.key</filename>, and <filename>server.pem</filename> in the respective directories where the keys can be found. For Tomcat, for example, this directory is <filename>/etc/tomcat/ssl/</filename>.</para>
         </step>
      </procedure>
   </sect1>
   <sect1 xml:id="sec-update-preparation-vms">
      <title>Shut down virtual machine guests</title>
      <para>If your machine serves as a VM Host Server for KVM or Xen, make sure to properly shut down all running VM Guests prior to the update. Otherwise you may not be able to access the guests after the update.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-rmt">
      <title>Adjust your SMT client setup</title>
      <para>If the machine you want to upgrade is registered as a client against an SMT server, take care to do the following:</para>
      <para>Check if the version of the <command>clientSetup4SMT.sh</command> script on your host is up to date. <command>clientSetup4SMT.sh</command> from older versions of SMT cannot manage SMT 12 clients. If you apply software patches regularly on your SMT server, you can always find the latest version of <command>clientSetup4SMT.sh</command> at <filename>&lt;SMT_HOSTNAME&gt;/repo/tools/clientSetup4SMT.sh</filename>.</para>
      <para>In case upgrading your machine to a higher version of <phrase role="productname">SUSE Linux Enterprise Server</phrase> fails, deregister the machine from the SMT server as described in <xref linkend="pro-sec-update-prep-smt-de-register" xrefstyle="%label"/>. Afterward, restart the upgrade process.</para>
      <procedure xml:id="pro-sec-update-prep-smt-de-register">
         <title>Deregistering a SUSE Linux Enterprise client from an SMT server</title>
         <step>
            <para>Log in to the client machine.</para>
         </step>
         <step>
            <para>The following step depends on the current operating system of the client:</para>
            <itemizedlist>
               <listitem>
                  <para>For SUSE Linux Enterprise 11, execute the following commands:</para>
                  <screen><prompt>&gt;</prompt><command>sudo</command> suse_register -E
<prompt>&gt;</prompt><command>sudo</command> rm -f /etc/SUSEConnect
<prompt>&gt;</prompt><command>sudo</command> rm -rf /etc/zypp/credentials.d/*
<prompt>&gt;</prompt><command>sudo</command> rm -rf /etc/zypp/repos.d/*
<prompt>&gt;</prompt><command>sudo</command> rm -f /etc/zypp/services.d/*
<prompt>&gt;</prompt><command>sudo</command> rm -f /var/cache/SuseRegister/*
<prompt>&gt;</prompt><command>sudo</command> rm -f /etc/suseRegister*
<prompt>&gt;</prompt><command>sudo</command> rm -f /var/cache/SuseRegister/lastzmdconfig.cache
<prompt>&gt;</prompt><command>sudo</command> rm -f /etc/zmd/deviceid
<prompt>&gt;</prompt><command>sudo</command> rm -f /etc/zmd/secret</screen>
               </listitem>
               <listitem>
                  <para>For SUSE Linux Enterprise 12, execute the following commands:</para>
                  <screen><prompt>&gt;</prompt><command>sudo</command> SUSEConnect --de-register
<prompt>&gt;</prompt><command>sudo</command> SUSEConnect --cleanup
<prompt>&gt;</prompt><command>sudo</command> rm -f /etc/SUSEConnect
<prompt>&gt;</prompt><command>sudo</command> rm -rf /etc/zypp/credentials.d/*
<prompt>&gt;</prompt><command>sudo</command> rm -rf /etc/zypp/repos.d/*
<prompt>&gt;</prompt><command>sudo</command> rm -f /etc/zypp/services.d/*</screen>
               </listitem>
            </itemizedlist>
         </step>
         <step>
            <para>Log in to the SMT server.</para>
         </step>
         <step>
            <para>Check if the client has successfully been deregistered by listing all client registrations:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> smt-list-registrations</screen>
         </step>
         <step>
            <para>If the client's host name is still listed in the output of this command, get the client's <literal>Unique ID</literal> from the first column. (The client might be listed with multiple IDs.)</para>
         </step>
         <step>
            <para>Delete the registration for this client:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> smt-delete-registration -g <replaceable>UNIQUE_ID</replaceable></screen>
         </step>
         <step>
            <para>If the client is listed with multiple IDs, repeat the step above for each of its unique IDs.</para>
         </step>
         <step>
            <para>Check if the client has now successfully been deregistered by re-running:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command> smt-list-registrations</screen>
         </step>
      </procedure>
   </sect1>
   <sect1 xml:id="sec-autoyast-profiles">
      <title>Changes in AutoYaST profiles from SLE 12 to 15</title>
      <para>To learn how to migrate your AutoYaST profiles, see <phrase xmlns:l="http://docbook.org/ns/docbook/l10n" role="document-xref">Book <quote>AutoYaST Guide</quote>, </phrase>
         <xref linkend="appendix-ay-12vs15" xrefstyle="%label &#34;%c&#34;"/>.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-smt-to-rmt">
      <title>Upgrading a Subscription Management Tool (SMT) server</title>
      <para>A server running SMT requires a special upgrade procedure. Please refer to <phrase xmlns:l="http://docbook.org/ns/docbook/l10n" role="document-xref">Book <quote>Repository Mirroring Tool Guide</quote>, </phrase>
         <xref linkend="cha-rmt-migrate" xrefstyle="%label &#34;%c&#34;"/> in the Repository Mirroring Tool Guide.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-multiversion">
      <title>Temporarily disabling kernel multiversion support</title>
      <para>
         <phrase role="productname">SUSE Linux Enterprise Server</phrase> allows installing multiple kernel versions by enabling the respective settings in <filename>/etc/zypp/zypp.conf</filename>. Support for this feature needs to be temporarily disabled to upgrade to a service pack. When the update has successfully finished, multiversion support can be re-enabled. To disable multiversion support, comment the respective lines in <filename>/etc/zypp/zypp.conf</filename>. The result should look similar to:</para>
      <screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
      <para>To re-activate this feature after a successful update, remove the comment signs. For more information about multiversion support, refer to <phrase xmlns:l="http://docbook.org/ns/docbook/l10n" role="document-xref">Book <quote>Administration Guide</quote>, </phrase>
         <xref linkend="sec-tuning-multikernel-enable" xrefstyle="%label &#34;%c&#34;"/>.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-zipl">
      <title>IBM Z: Adjust <command>zipl</command> for UEFI Secure Boot</title>
      <para>When upgrading from SUSE Linux Enterprise Server 12, enabling UEFI Secure Boot during or after the upgrade with <command>yast bootloader</command> will fail with an error:</para>
      <screen>Error: Could not install Secure Boot IPL records: Missing
signature in image file /boot/zipl/image.prev
/sbin/zipl: Failed
/usr/sbin/grub2-install: error: `grub2-zipl-setup' failed.</screen>
      <para>This happens because <filename>/boot/zipl</filename> still contains the previous, unsigned kernel and initrd as fallback in case the new kernel does not boot. To avoid this error, edit <filename>/etc/default/grub</filename> and change <literal>SUSE_SECURE_BOOT=1</literal> to <literal>SUSE_SECURE_BOOT=auto</literal>. This setting makes <command>zipl</command> write a signature for the new kernel but not yield an error for the old kernel. Then run <command>grub2-install</command> to re-install the boot loader.</para>
      <para>Alternatively you can remove the obsolete kernel and initrd files from <filename>/boot/zipl</filename> manually. Only do so when you have already rebooted into the new kernel after the upgrade.</para>
      <para>After the next SUSE Linux Enterprise 15 kernel update, you can switch back to <literal>SUSE_SECURE_BOOT=1</literal> to ensure all kernels are signed.</para>
      <para>For more information, refer to <command>man 8 zipl</command> and the IBM documentation at <link xlink:href="https://www.ibm.com/docs/en/linux-on-systems?topic=loader-parameters"/>.</para>
   </sect1>
   <sect1 xml:id="sec-upgrade-prepare-boot-config">
      <title>Adjust the <literal>resume</literal> boot parameter</title>
      <para>On systems that have been installed with <phrase role="productname">SUSE Linux Enterprise Server</phrase> 12 or older, the default kernel command line in <filename>/etc/default/grub</filename> may contain a <parameter>resume</parameter> parameter using a device node name such as <filename>/dev/sda1</filename> to refer to the hibernation (suspend-to-disk) device. As device node names are not persistent and may change between reboots, fixing this is highly recommended. Otherwise, the upgraded system may hang on reboot.</para>
      <procedure>
         <step>
            <para>Find the hibernation device:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>grep resume /etc/default/grub</command>
GRUB_CMDLINE_LINUX_DEFAULT="resume=/dev/sda1 splash=silent quiet showopts"
</screen>
            <para>The hibernation device is <filename>/dev/sda1</filename>. If the command returns nothing, hibernation is not configured.</para>
         </step>
         <step>
            <para>Get the UUID for <filename>
                  <replaceable>/dev/sda1</replaceable>
               </filename>:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>blkid /dev/vda1</command>
/dev/vda1: UUID="a1d1f2e0-b0ee-4be2-83d5-78a98c585827" TYPE="swap" PARTUUID="000134b5-01"</screen>
            <para>The UUID for <filename>/dev/sda1</filename> is <literal>a1d1f2e0-b0ee-4be2-83d5-78a98c585827</literal>.</para>
         </step>
         <step>
            <para>Edit <filename>/etc/default/grub</filename> and adjust the <parameter>resume</parameter> parameter. Replace <literal>
                  <replaceable>/dev/sda1</replaceable>
               </literal> with <literal>
                  <replaceable>UUID=a1d1f2e0-b0ee-4be2-83d5-78a98c585827</replaceable>
               </literal>. The result will look like this:</para>
            <screen>GRUB_CMDLINE_LINUX_DEFAULT="resume=UUID=a1d1f2e0-b0ee-4be2-83d5-78a98c585827 splash=silent quiet showopts"</screen>
         </step>
         <step>
            <para>Update the configuration of the grub boot manger:</para>
            <screen><prompt>&gt;</prompt><command>sudo</command><command>grub2-mkconfig -o /boot/grub2/grub.cfg</command></screen>
         </step>
      </procedure>
      <para>If the system does not use hibernation, you can simply remove the <parameter>resume</parameter> parameter and update the boot configuration.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-zseries">
      <title>Upgrading on IBM Z</title>
      <para>Upgrading a SUSE Linux Enterprise installation on IBM Z requires the <command>Upgrade=1</command> kernel parameter, for example via the parmfile. See <phrase xmlns:l="http://docbook.org/ns/docbook/l10n" role="document-xref">Book <quote>Deployment Guide</quote>, </phrase>
         <xref linkend="sec-appdendix-parm" xrefstyle="%label &#34;%c&#34;"/>.</para>
   </sect1>
   <sect1 xml:id="sec-update-preparation-ppc">
      <title>IBM POWER: Starting an X server</title>
      <para>On SLES 12 for IBM POWER the display manager is configured not to start a local X server by default. This setting was reversed on SLES 12 SP1—the display manager now starts an X server.</para>
      <para>To avoid problems during upgrade, the <phrase role="productname">SUSE Linux Enterprise Server</phrase> setting is not changed automatically. If you want the display manager to start an X server after the upgrade, change the setting of <envar>DISPLAYMANAGER_STARTS_XSERVER</envar> in <filename>/etc/sysconfig/displaymanager</filename> as follows:</para>
      <screen>DISPLAYMANAGER_STARTS_XSERVER="yes"</screen>
   </sect1>
</chapter>
