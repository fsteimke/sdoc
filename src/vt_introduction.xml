<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:its="http://www.w3.org/2005/11/its"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.2"
         xml:id="chap-virtualization-introduction"><!-- I/O virtualization -->
   <title>Virtualization technology</title>
   <info>
      <abstract>
         <para>Virtualization is a technology that provides a way for a machine (Host) to run another operating system (guest virtual machines) on top of the host operating system.</para>
      </abstract>
   </info>
   <sect1 xml:id="sec-virtualization-introduction-overview">
      <title>Overview</title>
      <!-- import from White papers -->
      <para>
         <phrase role="productname">SUSE Linux Enterprise Server</phrase> includes the latest open source virtualization technologies, Xen and KVM. With these hypervisors, <phrase role="productname">SUSE Linux Enterprise Server</phrase> can be used to provision, de-provision, install, monitor and manage multiple virtual machines (VM Guests) on a single physical system (for more information see <xref linkend="gloss-vt-hypervisor"/>). <phrase role="productname">SUSE Linux Enterprise Server</phrase> can create virtual machines running both modified, highly tuned, paravirtualized operating systems and fully virtualized unmodified operating systems.</para>
      <para>The primary component of the operating system that enables virtualization is a hypervisor (or virtual machine manager), which is a layer of software that runs directly on server hardware. It controls platform resources, sharing them among multiple VM Guests and their operating systems by presenting virtualized hardware interfaces to each VM Guest.</para>
      <para>SUSE Linux Enterprise is an enterprise-class Linux server operating system that offers two types of hypervisors: Xen and KVM.</para>
      <para>
         <phrase role="productname">SUSE Linux Enterprise Server</phrase> with Xen or KVM acts as a virtualization host server (<xref linkend="gloss-vt-vhs"/>) that supports VM Guests with its own guest operating systems. The SUSE VM Guest architecture consists of a hypervisor and management components that constitute the VHS, which runs many application-hosting VM Guests.</para>
      <para>In Xen, the management components run in a privileged VM Guest often called <xref linkend="gloss-vt-dom0"/>. In KVM, where the Linux kernel acts as the hypervisor, the management components run directly on the VHS.</para>
   </sect1>
   <sect1 xml:id="sec-virtualization-introduction-benefits">
      <title>Virtualization benefits</title>
      <para>Virtualization brings a lot of advantages while providing the same service as a hardware server.</para>
      <para>First, it reduces the cost of your infrastructure. Servers are mainly used to provide a service to a customer, and a virtualized operating system can provide the same service, with:</para>
      <itemizedlist mark="bullet" spacing="normal">
         <listitem>
            <para>Less hardware: you can run several operating systems on a single host, therefore all hardware maintenance is reduced.</para>
         </listitem>
         <listitem>
            <para>Less power/cooling: less hardware means you do not need to invest more in electric power, backup power, and cooling if you need more service.</para>
         </listitem>
         <listitem>
            <para>Save space: your data center space is saved because you do not need more hardware servers (less servers than service running).</para>
         </listitem>
         <listitem>
            <para>Less management: using a VM Guest simplifies the administration of your infrastructure.</para>
         </listitem>
         <listitem>
            <para>Agility and productivity: Virtualization provides <emphasis>migration</emphasis> capabilities, <emphasis>live migration</emphasis> and <emphasis>snapshots</emphasis>. These features reduce downtime, and bring an easy way to move your service from one place to another without any service interruption.</para>
         </listitem>
      </itemizedlist>
   </sect1>
   <sect1 xml:id="sec-virtualization-introduction-fvpv">
      <title>Virtualization modes</title>
      <para>Guest operating systems are hosted on virtual machines in either full virtualization (FV) mode or paravirtual (PV) mode. Each virtualization mode has advantages and disadvantages.</para>
      <itemizedlist mark="bullet" spacing="normal">
         <listitem>
            <para>Full virtualization mode lets virtual machines run unmodified operating systems, such as Windows* Server 2003. It can use either Binary Translation or <xref linkend="gloss-vt-hwassisted"/> virtualization technology, such as AMD* Virtualization or Intel* Virtualization Technology. Using hardware assistance allows for better performance on processors that support it.</para>
            <para>Certain guest operating systems hosted in full virtualization mode can be configured to use drivers from the SUSE Virtual Machine Drivers Pack (VMDP) instead of drivers originating from the operating system. Running virtual machine drivers improves performance dramatically on guest operating systems, such as Windows Server 2003. For more information, see <xref linkend="app-vmdp-driver"/>.</para>
         </listitem>
         <listitem>
            <para>To be able to run under paravirtual mode, guest operating systems normally need to be modified for the virtualization environment. However, operating systems running in paravirtual mode have better performance than those running under full virtualization.</para>
            <para>Operating systems currently modified to run in paravirtual mode are called <emphasis>paravirtualized operating systems</emphasis> and include <phrase role="productname">SUSE Linux Enterprise Server</phrase>.</para>
         </listitem>
      </itemizedlist>
   </sect1>
   <!-- I/O virtualization -->
   <xi:include href="vt_io.xml"/>
</chapter>
