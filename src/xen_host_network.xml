<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:its="http://www.w3.org/2005/11/its"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.2"
         xml:id="cha-xen-network"><!-- TODO: remove next when done with previous two sections -->
   <title>Virtual networking</title>
   <info/>
   <para>A VM Guest system needs specific means to communicate either with other VM Guest systems or with a local network. The network interface to the VM Guest system is made of a split device driver, which means that any virtual Ethernet device has a corresponding network interface in Dom0. This interface is set up to access a virtual network that is run in Dom0. The bridged virtual network is fully integrated into the system configuration of <phrase role="productname">SUSE Linux Enterprise Server</phrase> and can be configured with YaST.</para>
   <para>When installing a Xen VM Host Server, a bridged network configuration is proposed during normal network configuration. The user can choose to change the configuration during the installation and customize it to the local needs.</para>
   <para>If desired, Xen VM Host Server can be installed after performing a default Physical Server installation using the <systemitem>Install Hypervisor and Tools</systemitem> module in YaST. This module prepares the system for hosting virtual machines, including invocation of the default bridge networking proposal.</para>
   <para>In case the necessary packages for a Xen VM Host Server are installed manually with <systemitem>rpm</systemitem> or <systemitem>zypper</systemitem>, the remaining system configuration needs to be done by the administrator manually or with YaST.</para>
   <para>The network scripts that are provided by Xen are not used by default in <phrase role="productname">SUSE Linux Enterprise Server</phrase>. They are only delivered for reference but disabled. The network configuration that is used in <phrase role="productname">SUSE Linux Enterprise Server</phrase> is done by the YaST system configuration similar to the configuration of network interfaces in <phrase role="productname">SUSE Linux Enterprise Server</phrase>.</para>
   <para>For more general information about managing network bridges, see <xref linkend="libvirt-networks-bridged"/>.</para>
   <sect1 xml:id="sec-xen-vdevices">
      <title>Network devices for guest systems</title>
      <!--Jim: I did not find the qemu-ifup script used to create HVM vif bridges.
      could you give me a hint how ioemu devices are set up? -->
      <!-- answer:
      There is a question to me at beginning of this section.  Answer:
      /etc/xen/qemu-ifup is the script used to configure vif devices for hvm
      guests.  Essentially it just hooks the qemu tap device to the bridge.
      -->
      <para>The Xen hypervisor can provide different types of network interfaces to the VM Guest systems. The preferred network device should be a paravirtualized network interface. This yields the highest transfer rates with the lowest system requirements. Up to eight network interfaces may be provided for each VM Guest.</para>
      <para>Systems that are not aware of paravirtualized hardware may not have this option. To connect systems to a network that can only run fully virtualized, several emulated network interfaces are available. The following emulations are at your disposal:</para>
      <itemizedlist mark="bullet" spacing="normal">
         <listitem>
            <para>Realtek 8139 (PCI). This is the default emulated network card.</para>
         </listitem>
         <listitem>
            <para>AMD PCnet32 (PCI)</para>
         </listitem>
         <listitem>
            <para>NE2000 (PCI)</para>
         </listitem>
         <listitem>
            <para>NE2000 (ISA)</para>
         </listitem>
         <listitem>
            <para>Intel e100 (PCI)</para>
         </listitem>
         <listitem>
            <para>Intel e1000 and its variants e1000-82540em, e1000-82544gc, e1000-82545em (PCI)</para>
         </listitem>
      </itemizedlist>
      <para>All these network interfaces are software interfaces. Because every network interface must have a unique MAC address, an address range has been assigned to Xensource that can be used by these interfaces.</para>
      <tip>
         <title>Virtual network interfaces and MAC addresses</title>
         <para>The default configuration of MAC addresses in virtualized environments creates a random MAC address that looks like 00:16:3E:xx:xx:xx. Normally, the amount of available MAC addresses should be big enough to get only unique addresses. However, if you have a large installation, or to make sure that no problems arise from random MAC address assignment, you can also manually assign these addresses.</para>
      </tip>
      <para>For debugging or system management purposes, it may be useful to know which virtual interface in Dom0 is connected to which Ethernet device in a running guest. This information may be read from the device naming in Dom0. All virtual devices follow the rule <literal>vif&lt;domain number&gt;.&lt;interface_number&gt;</literal>.</para>
      <para>For example, to know the device name for the third interface (eth2) of the VM Guest with id 5, the device in Dom0 would be <literal>vif5.2</literal>. To obtain a list of all available interfaces, run the command <command>ip a</command>.</para>
      <para>The device naming does not contain any information about which bridge this interface is connected to. However, this information is available in Dom0. To get an overview about which interface is connected to which bridge, run the command <command>bridge link</command>. The output may look as follows:</para>
      <screen><prompt>&gt;</prompt><command>sudo</command> bridge link
2: eth0 state DOWN : &lt;NO-CARRIER,BROADCAST,MULTICAST,SLAVE,UP&gt; mtu 1500 master br0
3: eth1 state UP : &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu 1500 master br1
</screen>
      <para>In this example, there are three configured bridges: <literal>br0</literal>, <literal>br1</literal> and <literal>br2</literal>. Currently, <literal>br0</literal> and <literal>br1</literal> each have a real Ethernet device added: <literal>eth0</literal> and <literal>eth1</literal>, respectively.</para>
   </sect1>
   <sect1 xml:id="sec-xen-net-host-route">
      <title>Host-based routing in Xen</title>
      <para>Xen can be set up to use host-based routing in the controlling Dom0, although this is not yet well supported from YaST and requires certain amount of manual editing of configuration files. Thus, this is a task that requires an advanced administrator.</para>
      <para>The following configuration only works when using fixed IP addresses. Using DHCP is not practicable with this procedure, because the IP address must be known to both the VM Guest and the VM Host Server system.</para>
      <para>The easiest way to create a routed guest is to change the networking from a bridged to a routed network. As a requirement to the following procedures, a VM Guest with a bridged network setup must be installed. For example, the VM Host Server is named earth with the IP 192.168.1.20, and the VM Guest has the name alice with the IP 192.168.1.21.</para>
      <procedure xml:id="proc-xen-network-route-ipv4">
         <title>Configuring a routed IPv4 VM Guest</title>
         <step>
            <para>Make sure that alice is shut down. Use <systemitem>xl</systemitem> commands to shut down and check.</para>
         </step>
         <step>
            <para>Prepare the network configuration on the VM Host Server earth:</para>
            <substeps performance="required">
               <step>
                  <para>Create a hotplug interface to route the traffic. To accomplish this, create a file named <filename>/etc/sysconfig/network/ifcfg-alice.0</filename> with the following content:</para>
                  <screen>NAME="Xen guest alice"
BOOTPROTO="static"
STARTMODE="hotplug"
     </screen>
               </step>
               <step>
                  <para>Ensure that IP forwarding is enabled:</para>
                  <substeps>
                     <step>
                        <para>In YaST, go to <menuchoice>
                              <guimenu>Network Settings</guimenu>
                              <guimenu>Routing</guimenu>
                           </menuchoice>.</para>
                     </step>
                     <step>
                        <para>Enter the <guimenu>Routing</guimenu> tab and activate <guimenu>Enable IPv4 Forwarding</guimenu> and <guimenu>Enable IPv6 Forwarding</guimenu> options.</para>
                     </step>
                     <step>
                        <para>Confirm the setting and quit YaST.</para>
                     </step>
                  </substeps>
               </step>
               <step>
                  <para>Apply the following configuration to <systemitem class="daemon">firewalld</systemitem>:</para>
                  <itemizedlist mark="bullet" spacing="normal">
                     <listitem>
                        <para>Add alice.0 to the devices in the public zone:</para>
                        <screen><prompt>&gt;</prompt><command>sudo</command> firewall-cmd --zone=public --add-interface=alice.0</screen>
                     </listitem>
                     <listitem>
                        <para>Tell the firewall which address should be forwarded:</para>
                        <screen><prompt>&gt;</prompt><command>sudo</command> firewall-cmd --zone=public \
--add-forward-port=port=80:proto=tcp:toport=80:toaddr="192.168.1.21/32,0/0"</screen>
                     </listitem>
                     <listitem>
                        <para>Make the runtime configuration changes permanent:</para>
                        <screen><prompt>&gt;</prompt><command>sudo</command> firewall-cmd --runtime-to-permanent</screen>
                     </listitem>
                  </itemizedlist>
               </step>
               <step>
                  <para>Add a static route to the interface of alice. To accomplish this, add the following line to the end of <filename>/etc/sysconfig/network/routes</filename>:</para>
                  <screen>192.168.1.21  -  -  alice.0</screen>
               </step>
               <step>
                  <para>To make sure that the switches and routers that the VM Host Server is connected to know about the routed interface, activate <literal>proxy_arp</literal> on earth. Add the following lines to <filename>/etc/sysctl.conf</filename>:</para>
                  <screen>net.ipv4.conf.default.proxy_arp = 1
net.ipv4.conf.all.proxy_arp = 1</screen>
               </step>
               <step>
                  <para>Activate all changes with the commands:</para>
                  <screen><prompt>&gt;</prompt><command>sudo</command> systemctl restart systemd-sysctl wicked</screen>
               </step>
            </substeps>
         </step>
         <step>
            <para>Proceed with configuring the Xen configuration of the VM Guest by changing the vif interface configuration for alice as described in <xref linkend="sec-xen-manage-xl"/>. Make the following changes to the text file you generate during the process:</para>
            <substeps performance="required">
               <step>
                  <para>Remove the snippet</para>
                  <screen>bridge=br0</screen>
               </step>
               <step>
                  <para>And add the following one:</para>
                  <screen>vifname=vifalice.0</screen>
                  <para>or</para>
                  <screen>vifname=vifalice.0=emu</screen>
                  <para>for a fully virtualized domain.</para>
               </step>
               <step>
                  <para>Change the script that is used to set up the interface to the following:</para>
                  <screen>script=/etc/xen/scripts/vif-route-ifup</screen>
               </step>
               <step>
                  <para>Activate the new configuration and start the VM Guest.</para>
               </step>
            </substeps>
         </step>
         <step>
            <para>The remaining configuration tasks must be accomplished from inside the VM Guest.</para>
            <substeps performance="required">
               <step>
                  <para>Open a console to the VM Guest with <command>xl console</command>
                     <replaceable>DOMAIN</replaceable> and log in.</para>
               </step>
               <step>
                  <para>Check that the guest IP is set to 192.168.1.21.</para>
               </step>
               <step>
                  <para>Provide VM Guest with a host route and a default gateway to the VM Host Server. Do this by adding the following lines to <filename>/etc/sysconfig/network/routes</filename>:</para>
                  <screen>192.168.1.20 - - eth0
default 192.168.1.20 - -
     </screen>
               </step>
            </substeps>
         </step>
         <step>
            <para>Finally, test the network connection from the VM Guest to the world outside and from the network to your VM Guest.</para>
         </step>
      </procedure>
   </sect1>
   <sect1 xml:id="sec-xen-net-masquerade">
      <title>Creating a masqueraded network setup</title>
      <para>Creating a masqueraded network setup is similar to the routed setup. However, there is no proxy_arp needed, and certain firewall rules are different. To create a masqueraded network to a guest dolly with the IP address 192.168.100.1 where the host has its external interface on <literal>br0</literal>, proceed as follows. For easier configuration, only the already installed guest is modified to use a masqueraded network:</para>
      <procedure>
         <title>Configuring a masqueraded IPv4 VM guest</title>
         <step>
            <para>Shut down the VM Guest system with <command>xl shutdown</command>
               <replaceable>DOMAIN</replaceable>.</para>
         </step>
         <step>
            <para>Prepare the network configuration on the VM Host Server:</para>
            <substeps performance="required">
               <step>
                  <para>Create a hotplug interface to route the traffic. To accomplish this, create a file named <filename>/etc/sysconfig/network/ifcfg-dolly.0</filename> with the following content:</para>
                  <screen>NAME="Xen guest dolly"
BOOTPROTO="static"
STARTMODE="hotplug"
     </screen>
               </step>
               <step>
                  <para>Edit the file <filename>/etc/sysconfig/SuSEfirewall2</filename> and add the following configurations:</para>
                  <itemizedlist mark="bullet" spacing="normal">
                     <listitem>
                        <para>Add dolly.0 to the devices in FW_DEV_DMZ:</para>
                        <screen>FW_DEV_DMZ="dolly.0"</screen>
                     </listitem>
                     <listitem>
                        <para>Switch on the routing in the firewall:</para>
                        <screen>FW_ROUTE="yes"</screen>
                     </listitem>
                     <listitem>
                        <para>Switch on masquerading in the firewall:</para>
                        <screen>FW_MASQUERADE="yes"</screen>
                     </listitem>
                     <listitem>
                        <para>Tell the firewall which network should be masqueraded:</para>
                        <screen>FW_MASQ_NETS="192.168.100.1/32"</screen>
                     </listitem>
                     <listitem>
                        <para>Remove the networks from the masquerading exceptions:</para>
                        <screen>FW_NOMASQ_NETS=""</screen>
                     </listitem>
                     <listitem>
                        <para>Finally, restart the firewall with the command:</para>
                        <screen><prompt>&gt;</prompt><command>sudo</command> systemctl restart SuSEfirewall2</screen>
                     </listitem>
                  </itemizedlist>
               </step>
               <step>
                  <para>Add a static route to the interface of dolly. To accomplish this, add the following line to the end of <filename>/etc/sysconfig/network/routes</filename>:</para>
                  <screen>192.168.100.1 - - dolly.0</screen>
               </step>
               <step>
                  <para>Activate all changes with the command:</para>
                  <screen><prompt>&gt;</prompt><command>sudo</command> systemctl restart wicked</screen>
               </step>
            </substeps>
         </step>
         <step>
            <para>Proceed with configuring the Xen configuration of the VM Guest.</para>
            <substeps performance="required">
               <step>
                  <para>Change the vif interface configuration for dolly as described in <xref linkend="sec-xen-manage-xl"/>.</para>
               </step>
               <step>
                  <para>Remove the entry:</para>
                  <screen>bridge=br0</screen>
               </step>
               <step>
                  <para>And add the following one:</para>
                  <screen>vifname=vifdolly.0</screen>
               </step>
               <step>
                  <para>Change the script that is used to set up the interface to the following:</para>
                  <screen>script=/etc/xen/scripts/vif-route-ifup</screen>
               </step>
               <step>
                  <para>Activate the new configuration and start the VM Guest.</para>
               </step>
            </substeps>
         </step>
         <step>
            <para>The remaining configuration tasks need to be accomplished from inside the VM Guest.</para>
            <substeps performance="required">
               <step>
                  <para>Open a console to the VM Guest with <command>xl console</command>
                     <replaceable>DOMAIN</replaceable> and log in.</para>
               </step>
               <step>
                  <para>Check whether the guest IP is set to 192.168.100.1.</para>
               </step>
               <step>
                  <para>Provide VM Guest with a host route and a default gateway to the VM Host Server. Do this by adding the following lines to <filename>/etc/sysconfig/network/routes</filename>:</para>
                  <screen>192.168.1.20 - - eth0
default 192.168.1.20 - -
     </screen>
               </step>
            </substeps>
         </step>
         <step>
            <para>Finally, test the network connection from the VM Guest to the outside world.</para>
         </step>
      </procedure>
   </sect1>
   <!-- TODO: remove next when done with previous two sections -->
   <sect1 xml:id="sec-xen-net-special">
      <title>Special configurations</title>
      <para>There are many network configuration possibilities available to Xen. The following configurations are not activated by default:</para>
      <sect2 xml:id="sec-xen-net-throttle">
         <title>Bandwidth throttling in virtual networks</title>
         <para>With Xen, you may limit the network transfer rate a virtual guest may use to access a bridge. To configure this, you need to modify the VM Guest configuration as described in <xref linkend="sec-xen-manage-xl"/>.</para>
         <para>In the configuration file, first search for the device that is connected to the virtual bridge. The configuration looks like the following:</para>
         <screen>vif = [ 'mac=00:16:3e:4f:94:a9,bridge=br0' ]</screen>
         <para>To add a maximum transfer rate, add a parameter <systemitem>rate</systemitem> to this configuration as in:</para>
         <screen>vif = [ 'mac=00:16:3e:4f:94:a9,bridge=br0,rate=100Mb/s' ]</screen>
         <para>The rate is either <literal>Mb/s</literal> (megabits per second) or <literal>MB/s</literal> (megabytes per second). In the above example, the maximum transfer rate of the virtual interface is 100 megabits. By default, there is no limitation to the bandwidth of a guest to the virtual bridge.</para>
         <para>It is even possible to fine-tune the behavior by specifying the time window that is used to define the granularity of the credit replenishment:</para>
         <screen>vif = [ 'mac=00:16:3e:4f:94:a9,bridge=br0,rate=100Mb/s@20ms' ]</screen>
      </sect2>
      <sect2 xml:id="sec-xen-net-monitor">
         <title>Monitoring the network traffic</title>
         <para>To monitor the traffic on a specific interface, the little application <systemitem>iftop</systemitem> is a nice program that displays the current network traffic in a terminal.</para>
         <para>When running a Xen VM Host Server, you need to define the interface that is monitored. The interface that Dom0 uses to get access to the physical network is the bridge device, for example, <systemitem>br0</systemitem>. This, however, may vary on your system. To monitor all traffic to the physical interface, run a terminal as <systemitem class="username">root</systemitem> and use the command:</para>
         <screen>iftop -i br0</screen>
         <para>To monitor the network traffic of a special network interface of a specific VM Guest, supply the correct virtual interface. For example, to monitor the first Ethernet device of the domain with id 5, use the command:</para>
         <screen>ftop -i vif5.0</screen>
         <para>To quit <command>iftop</command>, press the key <keycap>Q</keycap>. More options and possibilities are available in the man page <command>man 8 iftop</command>.</para>
      </sect2>
   </sect1>
</chapter>
